 
 git config name email
 
 git add <文件>添加文件
 git status 查看当前状态,并返回有什么事未做
 git commit -m<注释> 提交文件并注释
 git diff <文件>查看改动地方不同
 git log查询提交历史
 git reflog查看命令历史,关掉重启可看
 git checkout --<file> 撤销最近一次git add git commit
 git reset HEAD <file> 返回上一次修改 HEAD^ 上上 HEAD^^ 上上上
 一.时光机穿梭
 A. 版本回退

	HEAD 指向的版本就是当前版本,因此,git允许我们在版本历史之间穿梭,使用命令 git reset --hard commit_id 

	穿梭前,用git log查询提交历史,以便确定回退到哪个版本

	要重返未来,用 git reflog 查看命令历史,以便确定要回到未来的哪个版本

	如果不用git add 到暂存区,那就不会加入到 commit 中.

 B. 撤销修改 
	1.未add 直接丢弃工作区的修改 git chectout -- file
	2.add了 即放到暂存区 要 git reset HEAD <file> 回到 1 , 然后执行 1
	3.已经提交不合适的修改到版本库,就版本回退就是上面的穿梭,前提是不推送到远程库
 C. 删除文件
	提交到版本库,用 rm <file> remove 文件, 但版本库仍然不变 需要 git rm <file> 并且 git commit
	删错了用 git checkout -- <file>
	
	命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，
	但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。
 二.远程仓库
 A. 添加远程库
	要关联一个远程库,使用命令 git remote add origin git@server-name : path/repo-name.git;
	关联后,使用命令 git push -u origin master 第一次推送master 分支的所有内容;
	此后,每次本地提交后,只要有必要,就可以使用命令git push origin master推送最新的修改;
	分布式版本的最大好处之一就是在本地工作完全不需要考虑远程库的存在,也就是有没有联网都可以正常工作,
	而SVN在没有联网的时候是拒绝干活的!当有网络的时候,再把本地提交推送一下就完成了同步,非常方便.
	